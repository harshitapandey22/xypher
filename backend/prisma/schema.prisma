datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  password        String
  name            String
  balance         Float         @default(0)
  dailyLimit      Float         @default(0)
  initialBalance  Float?
  categories      Category[]
  accounts        Account[]
  goals           Goal[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  Transaction     Transaction[]
}

model Account {
  id           Int           @id @default(autoincrement())
  name         String
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  balance      Float         @default(0)
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id          Int      @id @default(autoincrement())
  amount      Float
  description String?
  date        DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  type        String   @default("expense")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Account     Account? @relation(fields: [accountId], references: [id])
  accountId   Int?
}

model Goal {
  id        Int      @id @default(autoincrement())
  name      String
  target    Float
  current   Float    @default(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  priority  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String   @db.Text
  createdAt DateTime @default(now())
}